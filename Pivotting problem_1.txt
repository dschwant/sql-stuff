/*
An explanation for this is found in the fact that the database engine groups by a available columns in the "from" dataset
, and then presents only the finally selected columns. Here are a couple of articles:
http://www.sqlpassion.at/archive/2014/08/25/the-dangerous-beauty-of-the-pivot-operator-in-sql-server/
https://www.red-gate.com/simple-talk/sql/t-sql-programming/questions-about-pivoting-data-in-sql-server-you-were-too-shy-to-ask/

But, that does not explain why the case works were multiple INT columns are in the from set but only one is in the final select (1.e below). 
And why do 1.e and 1.g work but 2.c and 4.b do not?
*/

DROP TABLE #RAW_DATA
GO
CREATE TABLE #RAW_DATA (RUN_HOUR CHAR(13)
					, QUERY_TYPE CHAR(10)
					, CNT INT
					, AVRG DECIMAL(10,2)
					, FOO INT
					, BAR BIGINT
					, ANO DECIMAL(10,2)
					, TXT VARCHAR(10)
					, TXT2 VARCHAR(10)
					, FLT FLOAT
					, FLT2 FLOAT)
INSERT INTO #RAW_DATA (RUN_HOUR, QUERY_TYPE, CNT, AVRG, FOO, BAR, ANO, TXT, TXT2, FLT, FLT2) 
SELECT * 
FROM (VALUES ('2009-05-04 13','PAT',2,3.5,4,3,5,'A','w',1.2,2.1)
		,('2009-05-04 13','SCAN',1,3.8,4,3,6,'C','x',2.2,3.3)
		,('2009-05-04 13','NOT',1,3.8,4,3,6,'C','x',2.2,3.3)
		,('2009-05-04 16','NOT',2,1.3,4,3,7,'D','y',3.4,4.5)
		,('2009-05-04 16','SCAN',2,1.3,4,3,7,'D','y',3.4,4.5)
		,('2009-05-04 16','PAT',1,3.2,4,3,3,'B','z',99.1,0.123)) 
	AS C_Z(RUN_HOUR, QUERY_TYPE, CNT, AVRG, FOO, BAR, ANO, TXT, TXT2, FLT, FLT2)

SELECT * FROM #RAW_DATA ORDER BY RUN_HOUR DESC

SELECT TEST='FIRST SET IS PIVOT OF INT COL'

SELECT '1.a - DOES NOT WORK WITH DIRECT SELECT' = RUN_HOUR, PAT, SCAN
FROM #RAW_DATA
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.b - DOES NOT WORK WITH INDIRECT SELECT *' = RUN_HOUR, PAT, SCAN
FROM (SELECT * FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.c - DOES NOT WORK WITH SELECT 5 VAL COL' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, AVRG, FOO, BAR, ANO
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.d - DOES NOT WORK WITH SELECT 4 VAL COL' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, AVRG, FOO, BAR
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.e - WORKS WITH SELECT SOME 3 VAL COL (ALL INT)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, FOO, BAR
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.f - DOES NOT WORK WITH SELECT OTHER 3 VAL COL (MIX INT AND DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, AVRG, FOO
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.g - WORKS WITH SELECT SOME 2 VAL COL (BOTH INT)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, BAR
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.h - DOES NOT WORK WITH SELECT OTHER 2 VAL COL (MIX INT AND DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, ANO
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.i - WORKS WITH SELECT ONLY THE PIV VAL COL (INT)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '1.j - DOES NOT WORK WITH SELECT 2 COL (INT AND CHAR)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, CNT, TXT
		FROM #RAW_DATA) X
PIVOT (SUM(CNT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT TEST='SECOND SET IS PIVOT OF DEC COL'

SELECT '2.a - WORKS WITH SELECT ONLY THE PIV VAL COL (DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO
		FROM #RAW_DATA) X
PIVOT (SUM(ANO) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '2.b - DOES NOT WORK WITH SELECT 5 VAL COL (MIX INT AND DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO, CNT, FOO, BAR, AVRG
		FROM #RAW_DATA) X
PIVOT (SUM(ANO) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '2.c - DOES NOT WORK WITH SELECT 2 VAL COL (BOTH DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO, AVRG
		FROM #RAW_DATA) X
PIVOT (SUM(ANO) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '2.d - DOES NOT WORK WITH SELECT 2 VAL COL (MIX INT AND DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO, CNT
		FROM #RAW_DATA) X
PIVOT (SUM(ANO) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT TEST='THIRD SET IS PIVOT OF DEC COL - MAX'

SELECT '3.a - WORKS WITH SELECT ONLY THE PIV VAL COL (DEC) - MAX' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO
		FROM #RAW_DATA) X
PIVOT (MAX(ANO) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '3.a - DOES NOT WORK WITH SELECT 5 VAL COL (MIX INT AND DEC) - MAX' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO, CNT, FOO, BAR, AVRG
		FROM #RAW_DATA) X
PIVOT (MAX(ANO) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT TEST='FOURTH SET IS PIVOT OF VARCHAR COL - MAX'

SELECT '4.a - WORKS WITH SELECT ONLY THE PIV VAL COL (TXT)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, TXT
		FROM #RAW_DATA) X
PIVOT (MAX(TXT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '4.b - DOES NOT WORK WITH SELECT OF 2 TXT COL' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, TXT, TXT2
		FROM #RAW_DATA) X
PIVOT (MAX(TXT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '4.c - DOES NOT WORK WITH SELECT 5 VAL COL (MIX TXT, INT AND DEC)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, ANO, CNT, FOO, BAR, AVRG, TXT
		FROM #RAW_DATA) X
PIVOT (MAX(TXT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT TEST='FIFTH SET IS PIVOT OF FLT COL'

SELECT '5.a - WORKS WITH SELECT ONLY THE PIV VAL COL (FLT)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, FLT
		FROM #RAW_DATA) X
PIVOT (AVG(FLT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '5.b - DOES NOT WORK WITH SELECT 2 VAL COL SAME TYPE (FLT)' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, FLT, FLT2
		FROM #RAW_DATA) X
PIVOT (AVG(FLT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC

SELECT '5.c - DOES NOT WORK WITH SELECT 2 VAL COL DIFF TYPE' = RUN_HOUR, PAT, SCAN
FROM	(SELECT RUN_HOUR, QUERY_TYPE, FLT, CNT
		FROM #RAW_DATA) X
PIVOT (AVG(FLT) FOR QUERY_TYPE IN (PAT,SCAN)) P
ORDER BY RUN_HOUR DESC